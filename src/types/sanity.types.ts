/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Users = {
  _id: string;
  _type: "users";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  userId: string;
  username: string;
  firstName: string;
  lastName: string;
  fullName?: string;
  email: string;
  phone?: string;
  imageUrl?: string;
  dateOfBirth: string;
  gender: "male" | "female";
  country: string;
  address?: {
    addressLine1: string;
    addressLine2?: string;
    addressLine3?: string;
    city: string;
    state: string;
    postalCode: string;
  };
  pan?: string;
  cart?: Array<{
    productId: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "products";
    };
    quantity: number;
    size?: string;
    color?: string;
    addedAt?: string;
    _key: string;
  }>;
  orders?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "orders";
  }>;
  preferences?: {
    newsletterSubscription?: boolean;
    marketingEmails?: boolean;
    sizePreference?: "us_7" | "us_8" | "us_9" | "us_10" | "us_11" | "us_12";
    favoriteCategories?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "categories";
    }>;
    language?: "en" | "es" | "fr" | "de";
  };
  lastLogin?: string;
  createdAt?: string;
  updatedAt?: string;
};

export type OrderProduct = {
  _type: "orderProduct";
  productId: string;
  name: string;
  image: string;
  quantity: number;
  price: number;
};

export type Orders = {
  _id: string;
  _type: "orders";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  userNumber: string;
  userId: string;
  username: string;
  email: string;
  phoneNo: string;
  status: "pending" | "processing" | "shipped" | "delivered" | "cancelled" | "refunded";
  products?: Array<{
    _key: string;
  } & OrderProduct>;
  totalAmount: number;
  paymentStatus: "pending" | "completed" | "failed";
  shipping?: {
    name: string;
    address: string;
    city: string;
    state?: string;
    pan: string;
    postalCode: string;
    country: string;
    shippingRate: number;
    carrierCode: number;
    trackingId?: string;
  };
  createdAt: string;
};

export type Products = {
  _id: string;
  _type: "products";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  category: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "categories";
  };
  price: number;
  rating?: {
    stars?: number;
    count?: number;
  };
  price_id?: string;
  label: "just-in" | "promo-exclusion" | "sustainable-materials";
  sizes: Array<string>;
  stock: number;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  colors: Array<string>;
};

export type Categories = {
  _id: string;
  _type: "categories";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Users | OrderProduct | Orders | Products | Categories | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
